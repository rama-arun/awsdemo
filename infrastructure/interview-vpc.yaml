---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
    This template deploys a VPC, with a pair of public and private subnets spread 
    across two (Zone A & Zone B)  Availabilty Zones. It deploys an Internet Gateway,
    with a default route on the public subnets. It deploy NAT Gateway (in one public AZ), 
    and default routes for them in the private subnets.
    
Parameters: 

  ENV:
    Description: "Server Environment name."
    ConstraintDescription: "Choose an Environment from the drop down"
    Type: "String"
    AllowedValues:
      - "demo"

  VPCCIDR:
    Description: "Please enter the IP range (CIDR notation) for this VPC"
    Type: "String"

  PUBSUBNET1CIDR:
    Description: "Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone"
    Type: "String"

  PUBSUBNET2CIDR:
    Description: "Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone"
    Type: "String"

  PRVSUBNET1CIDR:
    Description: "Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone"
    Type: "String"

  PRVSUBNET2CIDR:
    Description: "Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone"
    Type: "String"

Resources:

####### Create custom VPC #######
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref "VPCCIDR"
      Tags:
      - Key: "Name"
        Value: !Sub "${ENV}-VPC"

####### Create Public Subnet #######
  PublicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref "VPC"
      CidrBlock: !Ref "PUBSUBNET1CIDR"
      AvailabilityZone: !Select [ '0', !GetAZs ]
      MapPublicIpOnLaunch: "True"
      Tags:
      - Key: "Name"
        Value: !Sub "${ENV}-${PUBSUBNET1CIDR}-PublicSubnet1"

  PublicSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref "VPC"
      CidrBlock: !Ref "PUBSUBNET2CIDR"
      AvailabilityZone: !Select [ '1', !GetAZs ]
      MapPublicIpOnLaunch: "True"
      Tags:
      - Key: "Name"
        Value: !Sub "${ENV}-${PUBSUBNET2CIDR}-PublicSubnet2"

######## Create Private Subnet #######
  PrivateSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref "VPC"
      CidrBlock: !Ref "PRVSUBNET1CIDR"
      AvailabilityZone: !Select [ '0', !GetAZs ]
      Tags:
      - Key: "Name"
        Value: !Sub "${ENV}-${PRVSUBNET1CIDR}-PrivateSubnet1"

  PrivateSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref "VPC"
      CidrBlock: !Ref "PRVSUBNET2CIDR"
      AvailabilityZone: !Select [ '1', !GetAZs ]
      Tags:
      - Key: "Name"
        Value: !Sub "${ENV}-${PRVSUBNET2CIDR}-PrivateSubnet2"

######## Create Internet Gateway #######
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: "Name"
        Value: !Sub "${ENV}-IGW"

######## Attach Internet Gateway to VPC #######
  GatewayToInternet:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref "VPC"
      InternetGatewayId: !Ref "InternetGateway"

######## Create Public Route Table #######
  PublicRouteTable1:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref "VPC"
      Tags:
      - Key: "Name"
        Value: !Sub "${ENV}-PublicRoute1"

  PublicRouteTable2:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref "VPC"
      Tags:
      - Key: "Name"
        Value: !Sub "${ENV}-PublicRoute2"

######## Create Private Route Table #######
  PrivateRouteTable1:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref "VPC"
      Tags:
      - Key: "Name"
        Value: !Sub "${ENV}-PrivateRoute1"

  PrivateRouteTable2:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref "VPC"
      Tags:
      - Key: "Name"
        Value: !Sub "${ENV}-PrivateRoute2"

######## Route-out Public Route Table to Internet Gateway (Internet connection)  #######
  PublicRouteIGW1:
    Type: "AWS::EC2::Route"
    DependsOn: "GatewayToInternet"
    Properties:
      RouteTableId: !Ref "PublicRouteTable1"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref "InternetGateway"

  PublicRouteIGW2:
    Type: "AWS::EC2::Route"
    DependsOn: "GatewayToInternet"
    Properties:
      RouteTableId: !Ref "PublicRouteTable2"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref "InternetGateway"

######## Associate Public Route Table with Public Subnet1 & Subnet2 #######
  PublicSubnet1RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref "PublicSubnet1"
      RouteTableId: !Ref "PublicRouteTable1"

  PublicSubnet2RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref "PublicSubnet2"
      RouteTableId: !Ref "PublicRouteTable2"

######## Associate Private Route Table with Private Subnet1 & Subnet2 #######
  PrivateSubnet1RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref "PrivateSubnet1"
      RouteTableId: !Ref "PrivateRouteTable1"

  PrivateSubnet2RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref "PrivateSubnet2"
      RouteTableId: !Ref "PrivateRouteTable2"

######## Create Nat Gateway in Public Subnet #######
######## Allocate Elastic IP to Nat Gateway #######
######## Target Private Route Table with Nat Gateway #######

  NATGateway1EIP:
    Type: "AWS::EC2::EIP"
    DependsOn: "GatewayToInternet"
    Properties:
      Domain: "VPC"

  NATGateway2EIP:
    Type: "AWS::EC2::EIP"
    DependsOn: "GatewayToInternet"
    Properties:
      Domain: "VPC"
  
  NATGateway1:
    Type: "AWS::EC2::NatGateway"
    DependsOn: "GatewayToInternet"
    Properties:
      AllocationId:
        Fn::GetAtt:
        - "NATGateway1EIP"
        - "AllocationId"  
      SubnetId: !Ref "PublicSubnet1"

  NATGateway2:
    Type: "AWS::EC2::NatGateway"
    DependsOn: "GatewayToInternet"
    Properties:
      AllocationId:
        Fn::GetAtt:
        - "NATGateway2EIP"
        - "AllocationId"  
      SubnetId: !Ref "PublicSubnet2"

  NatPrivateRoute1:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref "PrivateRouteTable1"
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref "NATGateway1"

  NatPrivateRoute2:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref "PrivateRouteTable2"
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref "NATGateway2"

######## Create Custom Network ACL #######
  NetworkACL:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId: !Ref "VPC"
      Tags:
        - Key: "Name"
          Value: !Sub "${ENV}-NetworkACL"

######## Associate Public Subnet to Network ACL #######
  PublicSubnet1NetworkAclAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref "PublicSubnet1"
      NetworkAclId: !Ref "NetworkACL"

  PublicSubnet2NetworkAclAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref "PublicSubnet2"
      NetworkAclId: !Ref "NetworkACL"

######## Associate Private Subnet to Network ACL #######
  PrivateSubnet1NetworkAclAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref "PrivateSubnet1"
      NetworkAclId: !Ref "NetworkACL"

  PrivateSubnet2NetworkAclAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref "PrivateSubnet2"
      NetworkAclId: !Ref "NetworkACL"


Outputs: 

  VPC: 
    Description: "A reference to the created VPC"
    Value: !Ref "VPC"
    Export:
      Name: !Sub "${ENV}-VPC"

  NetworkACL: 
    Description: "A reference to the created VPC"
    Value: !Ref "NetworkACL"

  PublicSubnets:
    Description: "A list of the public subnets"
    Value: !Join [ ",", [ !Ref "PublicSubnet1", !Ref "PublicSubnet2" ]]

  PrivateSubnets:
    Description: "A list of the private subnets"
    Value: !Join [ ",", [ !Ref "PrivateSubnet1", !Ref "PrivateSubnet2" ]]
    Export:
      Name: !Sub "${ENV}-PrivateSubnets"

  PublicSubnet1:
    Description: "A reference to the public subnet in the 1st Availability Zone"
    Value: !Ref "PublicSubnet1"

  PublicSubnet2: 
    Description: "A reference to the public subnet in the 2nd Availability Zone"
    Value: !Ref "PublicSubnet2"

  PrivateSubnet1:
    Description: "A reference to the private subnet in the 1st Availability Zone"
    Value: !Ref "PrivateSubnet1"

  PrivateSubnet2: 
    Description: "A reference to the private subnet in the 2nd Availability Zone"
    Value: !Ref "PrivateSubnet2"


